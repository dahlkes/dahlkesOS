#+TITLE: DahlkesOS
#+DESCRIPTION: An installtion script to install my flavour of ArchLinux.
#+AUTHOR: Stefan Dahlke
#+PROPERTY: header-args :tangle ./scripts/dahlkesOS
#+auto_tangle: t
#+STARTUP: showeverything

* TABLE OF CONTENTS :toc:
- [[#about-dahlkesos][About DahlkesOS]]
- [[#installing-dahlkeos][Installing DahlkeOS]]
  - [[#creating-iso][Creating ISO]]
  - [[#installation-instructions][Installation instructions]]
- [[#shebang-plus-comments][Shebang plus comments]]
- [[#check-that-user-is-not-root][Check that user is NOT root!]]
- [[#a-function-for-errors][A function for errors]]
- [[#whiptail-exports][Whiptail Exports]]
- [[#sync-the-repos-and-install-whiptail][Sync the repos and install 'whiptail']]
- [[#welcome-message][Welcome message]]
- [[#warning-the-user-about-potential-problems][Warning the user about potential problems]]
- [[#checking-localeconf][Checking locale.conf]]
- [[#adding-dtos-repo-to-pacmanconf][Adding DTOS repo to pacman.conf.]]
- [[#adding-keyservers-to-gpgconf][Adding keyservers to gpg.conf.]]
- [[#receiving-the-pgp-key][Receiving the PGP key]]
- [[#installing-paru][Installing paru]]
- [[#install-window-manager][Install window manager]]
- [[#install-the-base-packages-from-repositories][Install the base packages from repositories]]
- [[#copy-configs-over-from-etcdtos-into-home][Copy configs over from /etc/dtos into $HOME]]
- [[#install-bar-for-xmonad][Install Bar for XMonad]]
- [[#install-doom-emacs][Install Doom Emacs]]
- [[#copy-pacman-hooks][Copy pacman hooks]]
- [[#copy-dmscripts-config-and-set-important-variables][Copy dmscripts config and set important variables]]
- [[#compiling-xmonad][Compiling xmonad]]
- [[#compiling-the-xmonadctl-script][Compiling the xmonadctl script]]
- [[#set-default-user-shell-to-zsh][Set default USER shell to zsh]]
- [[#enable-sddm-for-login-manager][Enable SDDM for login manager]]
- [[#message-stating-that-the-installation-is-complete][Message stating that the installation is complete!]]

* About DahlkesOS
#+CAPTION: DahlkesOS scrot
#+ATTR_HTML: :alt DahlkesOS scrot :title DahlkesOS Scrot :aling left

DahlkesOS is the installation script for my personal ArchLinux flavour.
It is moslty based on DTOS by Derek Taylor (DistroTube) and I added some changes to fit my personal needs.
* Installing DahlkeOS
** Creating ISO
Before running this script you have to create the DahlkesOS iso.
For this run the script in the folder iso.
** Installation instructions
* Shebang plus comments
#+BEGIN_SRC bash :shebang "#!/usr/bin/env bash"
# ____        _     _ _              ___  ____
#|  _ \  __ _| |__ | | | _____  ___ / _ \/ ___|     Stefan Dahlke
#| | | |/ _` | '_ \| | |/ / _ \/ __| | | \___ \     https://www.github.com/dahlkes
#| |_| | (_| | | | | |   <  __/\__ \ |_| |___) |
#|____/ \__,_|_| |_|_|_|\_\___||___/\___/|____/
#
# NAME: DahlkesOS
# DESC: A installation script for my personal ArchLinux setup.
# WARNING: Run this script at your own risk.
#+END_SRC
* Check that user is NOT root!
Don't run this script as root!  This is done for safety reasons.  This script makes a lot of changes to the $HOME of the $USER of this script.  For obvious reasons, we want $USER to not be 'root' and $HOME not to be '/root'.  Instead, run this script as a normal user.  You will be asked to enter a sudo password at several points during the installation.

#+begin_src bash
if [ "$(id -u)" = 0 ]; then
    echo "##################################################################"
    echo "This script MUST NOT be run as root user since it makes changes"
    echo "to the \$HOME directory of the \$USER executing this script."
    echo "The \$HOME directory of the root user is, of course, '/root'."
    echo "We don't want to mess around in there. So run this script as a"
    echo "normal user. You will be asked for a sudo password when necessary."
    echo "##################################################################"
    exit 1
fi
#+end_src

* A function for errors
#+begin_src bash
error() { \
    clear; printf "ERROR:\\n%s\\n" "$1" >&2; exit 1;
}
#+end_src

* Whiptail Exports
These exports are the only way to specify colors with whiptail.
See this thread for more info:
https://askubuntu.com/questions/776831/whiptail-change-background-color-dynamically-from-magenta/781062
For more info on 'whiptail' see:
https://en.wikibooks.org/wiki/Bash_Shell_Scripting/Whiptail

#+begin_src bash
export NEWT_COLORS="
root=,blue
window=,black
shadow=,blue
border=blue,black
title=blue,black
textbox=blue,black
radiolist=black,black
label=black,blue
checkbox=black,blue
compactbutton=black,blue
button=black,red"
#+end_src

* Sync the repos and install 'whiptail'
#+begin_src bash
echo "##################################################################"
echo "## Syncing the repos and installing 'whiptail' if not installed ##"
echo "##################################################################"
sudo pacman --noconfirm --needed -Syu libnewt || error "Error syncing the repos."
#+end_src

* Welcome message
#+begin_src bash
welcome() { \
    whiptail --title "Installing DahlkesOS!" --msgbox "This is a script that will install my flavour of ArchLinux.  You will be asked to enter your sudo password at various points during this installation, so stay near the computer.\\n\\nStefan Dahlke" 16 60
}

welcome || error "User choose to exit."
#+end_src
* Warning the user about potential problems
#+begin_src bash
speedwarning() { \
    whiptail --title "Installing DahlkesOS!" --yesno "WARNING! The ParallelDownloads option is not enabled in /etc/pacman.conf. This may result in slower installation speeds. Are you sure you want to continue?" 16 60 || error "User choose to exit."
}

distrowarning() { \
    whiptail --title "Installing DahlkesOS!" --msgbox "WARNING! While this script works on all Arch based distros, some distros choose to package certain things that we also package, which may result in errors when trying to install DTOS packages. If this happens, please look at the package list and remove conflicts manually." 16 60 || error "User choose to exit."
}

grep -qs "#ParallelDownloads" /etc/pacman.conf && speedwarning
grep -qs "ID=arch" /etc/os-release || distrowarning
#+end_src

* Checking locale.conf
For some users, the LC_CTYPE variable is needed in the /etc/locale.conf for some programs (like dmenu) to work properly.  The following checks if the LC_CTYPE has been set.  If it has not been set, it will automatically be created using the same value as your LANG variable.  Then, a 'sudo locale-gen' will be run to generate the new locale settings.  These will take effect upon a reboot which should be done anyway once the DTOS installation has completed.
#+begin_src bash
grep "LC_CTYPE" /etc/locale.conf && echo "Checking the LC_CYPE variable in /etc/locale.conf. Variable is already set." || grep "LANG=" /etc/locale.conf | sed 's/LANG=/LC_CTYPE=/g' | sudo tee -a /etc/locale.conf
sudo locale-gen
#+end_src

* Adding DTOS repo to pacman.conf.
#+begin_src bash
addrepo() { \
    echo "#########################################################"
    echo "## Adding the DTOS core repository to /etc/pacman.conf ##"
    echo "#########################################################"
    grep -qxF "[dtos-core-repo]" /etc/pacman.conf ||
        ( echo " "; echo "[dtos-core-repo]"; echo "SigLevel = Required DatabaseOptional"; \
        echo "Server = https://gitlab.com/dtos/\$repo/-/raw/main/\$arch") | sudo tee -a /etc/pacman.conf
}

addrepo || error "Error adding DTOS repo to /etc/pacman.conf."
#+end_src

* Adding keyservers to gpg.conf.
#+begin_src bash
addkeyserver() { \
    echo "#######################################################"
    echo "## Adding keyservers to /etc/pacman.d/gnupg/gpg.conf ##"
    echo "#######################################################"
    grep -qxF "keyserver.ubuntu.com:80" /etc/pacman.d/gnupg/gpg.conf || echo "keyserver hkp://keyserver.ubuntu.com:80" | sudo tee -a /etc/pacman.d/gnupg/gpg.conf
    grep -qxF "keyserver.ubuntu.com:443" /etc/pacman.d/gnupg/gpg.conf || echo "keyserver hkps://keyserver.ubuntu.com:443" | sudo tee -a /etc/pacman.d/gnupg/gpg.conf
}

addkeyserver || error "Error adding keyservers to /etc/pacman.d/gnupg/gpg.conf"
#+end_src

* Receiving the PGP key
#+begin_src bash
receive_key() { \
    local _pgpkey="A62D56CABD8DD76E"
    echo "#####################################"
    echo "## Adding PGP key $_pgpkey ##"
    echo "#####################################"
    sudo pacman-key --recv-key $_pgpkey
    sudo pacman-key --lsign-key $_pgpkey
}

receive_key || error "Error receiving PGP key $_pgpkey"
#+end_src

* Installing paru
Let's go ahead and install the paru AUR helper because some of the software that the user could choose to install is only found the AUR.

#+begin_src bash
sudo pacman --noconfirm --needed -Sy dtos-core-repo/paru-bin || error "Error installing dtos-core-repo/paru-bin."

#+end_src
* Install window manager
#+begin_src bash
sudo pacman -Sy xmonad xmonad-contrib dtos-xmonad xmobar dtos-xmobar polybar dtos-polybar || echo "Not installing XMonad"

sudo pacman -Sy gnome
#+end_src
* Install the base packages from repositories
All packages listed are either in the standard Arch repos or in the DTOS repos.  All of these will be installed using pacman.  The only program that will not be installed through pacman is Doom Emacs, which will be installed later in the script.

=NOTE:= The '--ask 4' option is an undocumented option for pacman that can be found in pacman's source code (in pacman's alpm.h).  Adding this flags means that all questions about removing packages that are conflicts will automatically be answered YES.

#+begin_src bash
# Let's install each package listed in the pkglist.txt file.
sudo pacman --needed --ask 4 -Sy - < pkglist.txt || error "Failed to install required packages."
#+end_src

* Copy configs over from /etc/dtos into $HOME
While it would be easier to make packages that could install DTOS configs directly to the appropriate places in the $HOME folder, pacman does not allow for this.  Pacman is not allowed to touch $HOME ever!  The better way to do this is to install the configs in /etc/skel which is the standard directory to place such config files, but on many distros (for ex. Manjaro and Arco) /etc/skel is already used to store the distro's own config files.  So to avoid conflicts, all DTOS configs are placed in /etc/dtos and then copied over to $HOME.  A backup of config is created.  BEWARE!

=NOTE:= The /etc/dtos directory contains files and directories that are automatically copied over to a new user's home directory when such user is created by the 'useradd' or the 'adduser' program, depending on your Linux distro.
#+begin_src bash
echo "################################################################"
echo "## Copying DTOS configuration files from /etc/dtos into \$HOME ##"
echo "################################################################"
[ ! -d /etc/dtos ] && sudo mkdir /etc/dtos
[ -d /etc/dtos ] && mkdir ~/dtos-backup-$(date +%Y.%m.%d-%H%M) && cp -Rf /etc/dtos ~/dtos-backup-$(date +%Y.%m.%d-%H%M)
[ ! -d ~/.config ] && mkdir ~/.config
[ -d ~/.config ] && mkdir ~/.config-backup-$(date +%Y.%m.%d-%H%M) && cp -Rf ~/.config ~/.config-backup-$(date +%Y.%m.%d-%H%M)
cd /etc/dtos && cp -Rf . ~ && cd -
#+end_src

#+begin_src bash
# Change all scripts in .local/bin to be executable.
find $HOME/.local/bin -type f -print0 | xargs -0 chmod 775
#+end_src

* Install Bar for XMonad
#+begin_src bash
sudo pacman -S dtos-xmobar xmobar
cp /etc/dtos/.config/xmonad/xmonad-example-configs/xmonad-with-xmobar.hs $HOME/.config/xmonad/xmonad.hs
#+end_src
* Install Doom Emacs
#+begin_src bash
echo "#########################################################"
echo "## Installing Doom Emacs. This may take a few minutes. ##"
echo "#########################################################"
[ -d ~/.emacs.d ] && mv ~/.emacs.d ~/.emacs.d.bak.$(date +"%Y%m%d_%H%M%S")
[ -f ~/.emacs ] && mv ~/.emacs ~/.emacs.bak.$(date +"%Y%m%d_%H%M%S")
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom --force install
~/.emacs.d/bin/doom sync
#+end_src

* Copy pacman hooks
The following pacman hooks force xmonad to recompile every time there are updates to xmonad or the haskell libraries.
#+begin_src bash
[ ! -d /etc/pacman.d/hooks ] && sudo mkdir /etc/pacman.d/hooks
sudo cp /etc/dtos/.config/xmonad/pacman-hooks/recompile-xmonad.hook /etc/pacman.d/hooks/
sudo cp /etc/dtos/.config/xmonad/pacman-hooks/recompile-xmonadh.hook /etc/pacman.d/hooks/
#+end_src

* Copy dmscripts config and set important variables
+ Set DMBROWSER to 'qutebrowser'
+ Set DMTERM to 'alacritty'
#+begin_src bash
[ ! -d $HOME/.config/dmscripts ] && mkdir $HOME/.config/dmscripts
cp /etc/dmscripts/config $HOME/.config/dmscripts/config
sed -i 's/DMBROWSER=\"brave\"/DMBROWSER=\"qutebrowser\"/g' $HOME/.config/dmscripts/config
sed -i 's/DMTERM=\"st -e\"/DMTERM=\"alacritty -e\"/g' $HOME/.config/dmscripts/config
sed -i 's/setbg_dir=\"${HOME}\/Pictures\/Wallpapers\"/setbg_dir=\"\/usr\/share\/backgrounds\/dtos-backgrounds\"/g' $HOME/.config/dmscripts/config
#+end_src

* Compiling xmonad
=NOTE:= May not be needed if moving the pacman hooks works as expected.
#+begin_src bash
xmonad_recompile() { \
    echo "########################"
    echo "## Recompiling XMonad ##"
    echo "########################"
    xmonad --recompile
}

xmonad_recompile || echo "Recompiling Xmonad failed!"
#+end_src

* Compiling the xmonadctl script
#+begin_src bash
xmonadctl_compile() { \
    echo "####################################"
    echo "## Compiling the xmonadctl script ##"
    echo "####################################"
    ghc -dynamic "$HOME"/.config/xmonad/xmonadctl.hs
}

xmonadctl_compile || echo "Compiling the xmonadctl script failed!"
#+end_src

* Set default USER shell to zsh
#+begin_src bash
sudo chsh $USER -s "/bin/zsh" && \
echo -e "ZSH has been set as your default USER shell. \
        \nLogging out is required for this take effect."
#+end_src
* Enable SDDM for login manager
Disable the currently enabled display manager and enable SDDM instead.

#+begin_src bash
# Disable the current login manager
sudo systemctl disable $(grep '/usr/s\?bin' /etc/systemd/system/display-manager.service | awk -F / '{print $NF}') || echo "Cannot disable current display manager."
# Enable sddm as login manager
sudo systemctl enable sddm
echo "###################################"
echo "## Enable sddm as login manager. ##"
echo "###################################"

## Make multicolor-sddm-theme the default sddm theme ##
# This is the sddm system configuration file.
[ -f "/usr/lib/sddm/sddm.conf.d/default.conf" ] && \
    sudo cp /usr/lib/sddm/sddm.conf.d/default.conf /usr/lib/sddm/sddm.conf.d/default.conf.backup && \
    sudo sed -i 's/^Current=*.*/Current=multicolor-sddm-theme/g' /usr/lib/sddm/sddm.conf.d/default.conf

# This is the sddm local configuration file.
[ -f "/etc/sddm.conf" ] && \
    sudo cp /etc/sddm.conf /etc/sddm.conf.backup && \
    sudo sed -i 's/^Current=*.*/Current=multicolor-sddm-theme/g' /etc/sddm.conf

# Create a local configuration file if it doesn't exist.
# Standard Arch Linux does not create this file by default.
[ ! -f "/etc/sddm.conf" ] && \
    sudo cp /usr/lib/sddm/sddm.conf.d/default.conf /etc/sddm.conf || echo "Default sddm system config file is not found."
#+end_src

* Message stating that the installation is complete!
#+begin_src bash
echo "###################################"
echo "## DahlkesOS has been installed! ##"
echo "###################################"

while true; do
    read -p "Do you want to reboot to get your dtos? [Y/n] " yn
    case $yn in
        [Yy]* ) reboot;;
        [Nn]* ) break;;
        "" ) reboot;;
        * ) echo "Please answer yes or no.";;
    esac
done
#+end_src
