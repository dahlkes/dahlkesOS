#!/usr/bin/env bash
# ____        _     _ _              ___  ____
#|  _ \  __ _| |__ | | | _____  ___ / _ \/ ___|     Stefan Dahlke
#| | | |/ _` | '_ \| | |/ / _ \/ __| | | \___ \     https://www.github.com/dahlkes
#| |_| | (_| | | | | |   <  __/\__ \ |_| |___) |
#|____/ \__,_|_| |_|_|_|\_\___||___/\___/|____/
#
# NAME: DahlkesOS
# DESC: A installation script for my personal ArchLinux setup.
# WARNING: Run this script at your own risk.

echo "Welcome to install DahlkesOS a flavour of my Arch Linux setup."
read -p "Do you want to reinstall the system and use the existing user partition? (y/n): " answer

answer="${answer,,}"

reinstall=false

if [[ "$answer" == "yes" || "$answer" == "y" ]]; then
    reinstall=true
fi

if [ -e /sys/firmware/efi/efivars ]; then
    is_uefi=true
else
    is_uefi=false
fi

fdisk -l

read -p "Which device to you want to partitionate? (input the whole device path /dev/sda) " device

if [ ! -e "$device"]; then
    echo "Device $device does not exist."
    exit 1
fi

cfdisk $device

choose_partition() {
    local type = "$1"

    lsblk -o NAME,SIZE,FSTYPE,MOUNTPOINT
    read -p "Choose the partition for the $type partiotion: " partition

    if [ ! -e "/dev/$partition" ]; then
        echo "Partition $partition does not exist."
        exit 1
    fi


}

lsblk

read -p "Choose swap partition: " swap_partition
read -p "Choose boot partition: " boot_partition
read -p "Choose root partition: " root_partition
read -p "Chhose user partttion: " user_partition

#swap_partition=$(choose_partition("swap"))
#boot_partition=$(choose_partition("boot"))
#root_partition=$(choose_partition("root"))
#user_partition=$(user_partition("user"))

mkfs.ext4 /dev/$system_partition

if $is_uefi == true; then
   mkfs.fat -F32 /dev/$boot_partition
fi

mkswap /dev/$swap_partition
swapon /dev/$swap_partition

if $reinstall == FALSE; then
   mkfs.ext4 /dev/$user_partition
fi

mount --mkdir /dev/$root_partition /mnt
mount --mkdir /dev/$boot_partition /mnt/efi

pacstrap -K /mnt - < pkglist.txt

genfstab -U /mnt >> /mnt/etc/fstab
cp configSystem /mnt/root
arch-chroot /mnt /bin/bash -c "bash /root/configSystem"
rm /mnt/root/configSystem
umount -R /mnt
reboot
